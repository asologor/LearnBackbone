// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'underscore'], function(Backbone, _) {
    var EditView, _ref;
    EditView = (function(_super) {
      __extends(EditView, _super);

      function EditView() {
        _ref = EditView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      EditView.prototype.tagName = 'form';

      EditView.prototype.attributes = {
        'action': '#'
      };

      EditView.prototype.template = _.template($('#editInfo').html());

      EditView.prototype.mod = {};

      EditView.prototype.events = {
        'click #saveButton': 'saveClicked',
        'click #closeButton': 'closeClicked'
      };

      EditView.prototype.saveClicked = function() {
        var errors, key, value, _results;
        this.mod.name = this.$('#name').val();
        this.mod.lastName = this.$('#lastName').val();
        this.mod.gender = this.$('#gender').val();
        this.mod.age = this.$('#age').val();
        this.mod.phoneNumber = this.$('#phoneNumber').val();
        if (this.model.set(this.mod, {
          validate: true
        })) {
          this.$('ul').removeClass('editError');
          this.model.trigger('saveClicked');
          return this.remove();
        } else {
          this.$('ul').addClass('editError');
          errors = this.model.validationError;
          this.$('span').empty();
          _results = [];
          for (key in errors) {
            value = errors[key];
            _results.push(this.$("#" + key + "Span").text(value));
          }
          return _results;
        }
      };

      EditView.prototype.closeClicked = function() {
        this.model.trigger('itemClicked');
        return this.remove();
      };

      EditView.prototype.render = function() {
        this.$el.html(template(this.model.toJSON()));
        return this;
      };

      return EditView;

    })(Backbone.View);
    return EditView;
  });

}).call(this);

/*
//@ sourceMappingURL=EditView.map
*/
