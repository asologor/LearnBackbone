// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone'], function(Backbone) {
    var UserModel, _ref;
    UserModel = (function(_super) {
      __extends(UserModel, _super);

      function UserModel() {
        _ref = UserModel.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      UserModel.prototype.defaults = {
        name: '-',
        lastName: '-',
        gender: '-',
        age: 0,
        phoneNumber: '00000'
      };

      /*
      validate: (attrs) ->
        errors = {}
        if attrs.name.length < 2
          errors.name = 'You must enter a name!'
      
        if attrs.lastName.length < 2
          errors.lastName = 'You must enter a last name!'
      
        if not isFinite(attrs.age) or attrs.age.length < 1
          errors.age = 'You must enter an age!'
      
        if parseInt(attrs.age) <= 0
          errors.age = 'Age must be greater than 0!'
      
        reg = new RegExp "^\\+?[0-9]{10,14}$"
        unless reg.test(attrs.phoneNumber)
          errors.phoneNumber = 'Invalid phone number!'
      
        unless _.isEmpty(errors)
          errors
      */


      UserModel.prototype.validation = function() {
        return {
          age: function(value) {
            if (value !== 5) {
              return alert('Not 5!');
            }
          }
        };
      };

      return UserModel;

    })(Backbone.Model);
    return UserModel;
  });

}).call(this);

/*
//@ sourceMappingURL=UserModel.map
*/
